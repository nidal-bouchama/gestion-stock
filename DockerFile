# Use PHP 8.2 FPM Alpine as base image
FROM php:8.2-fpm-alpine3.18

# Set working directory
WORKDIR /var/www/html

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    libpng-dev \
    oniguruma-dev \
    libxml2-dev \
    zip \
    unzip \
    postgresql-client \
    postgresql-dev \
    nodejs \
    npm \
    linux-headers

# Install PHP extensions
RUN docker-php-ext-install pdo pdo_pgsql pgsql mbstring exif pcntl bcmath gd

# Node.js and npm are already installed from the previous step

# Get Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy project files
COPY . .

# Install project dependencies
RUN composer install --no-dev --no-interaction --optimize-autoloader
RUN npm install
RUN npm run build

# Generate application key if not exists
RUN if [ ! -f ".env" ]; then \
    cp .env.example .env && \
    php artisan key:generate; \
    fi

# Set initial permissions
RUN chown -R www-data:www-data . \
    && chmod -R 755 . \
    && chmod -R 775 storage bootstrap/cache

# Create storage link
RUN mkdir -p public/storage \
    && php artisan storage:link \
    && chown -R www-data:www-data public/storage \
    && chmod -R 775 public/storage

# Expose port 9000 for PHP-FPM
EXPOSE 9000

# Start PHP-FPM
CMD ["php-fpm"]